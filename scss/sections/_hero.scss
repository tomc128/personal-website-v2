@use '../util/variables';
@use '../util/mixins';

section#hero {
    min-height: 100vh;
    height: 1px; // allows .content height 100% to work
    padding-top: var(--nav-height);

    .content {
        display: flex;
        position: relative;
        width: 100vw;
        height: 100%;

        gap: 3rem;
        // dont override the default padding on .content (for sides)
        // padding-top: var(--nav-height);
        // padding-bottom: var(--nav-height);

        align-items: center;
        justify-content: space-between;

        @include mixins.tablet {
            // align-items: flex-start;
            gap: 5rem;
        }

        .left {
            display: flex;
            flex: 1 1 auto;
            flex-direction: column;
            
            h1 {
                font-size: clamp(3rem, 10vw, 4rem);
                color: variables.$text-title;
            }
            p {
                margin-top: 1rem;
                color: variables.$text-subtitle;
            }

            .actions {
                display: flex;
                flex-wrap: wrap;
                gap: 1rem;
                margin-top: 3rem;
            }
        }

        .right {
            flex: 0 1 auto;

            transition-property: width, height, opacity, transform; // opacity and trasnform for TAL
            transition-duration: 1s;
            transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);

            width: clamp(15rem, 50vw, 30rem);
            @include mixins.tablet {
                position: absolute;
                top: clamp(5rem, 20vw, 10rem);
                right: clamp(0px, 5vw, 5rem);
                width: clamp(10rem, 35vw, 25rem);
            }

            svg {
                border: 1px solid variables.$stroke;
                border-radius: 50%;

                transition: box-shadow 1s cubic-bezier(0.075, 0.82, 0.165, 1);

                #glass-gradient {
                    .stop-1 {
                        stop-color: variables.$glass-stop-one;
                    }
                    .stop-2 {
                        stop-color: variables.$glass-stop-two;
                    }
                }

                .bg-circle-glass {
                    fill: url(#glass-gradient);
                }
                .bg-circle {
                    fill: variables.$container-background-two;
                }

                .dot-grid-container {
                    transform-origin: 50%;

                    .dot-grid {
                        transform: rotate(-20deg);
                        transform-origin: 50%;
                        filter: blur(4px);
                        opacity: 30%;

                        transition-property: transform, filter;
                        transition-duration: 1s;
                        transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
                    }
                }

                .image {
                    transform: rotate(10deg);
                    transform-origin: 50%;

                    transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
                }

                &:hover {
                    .dot-grid {
                        transform: rotate(-10deg) scale(1.2);
                        filter: blur(8px);
                    }
                    image {
                        transform: rotate(13deg) scale(1.05);
                    }
                    
                    box-shadow: variables.$smooth-box-shadow;
                }
            }
        }
    }
}
