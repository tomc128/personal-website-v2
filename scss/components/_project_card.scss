@use '../util/variables';
@use '../util/mixins';

.project-card {
    min-height: 30rem;
    height: 1rem; // to make height: 100% work in .actions

    @include mixins.tablet {
        min-height: 35rem;
    }

    background: variables.$glass-gradient, variables.$container-background-two;
    border: 1px solid variables.$stroke;
    border-radius: variables.$border-radius;

    @include mixins.background-blur;

    &:nth-child(even) {
        > .content {
            // only make image on left for even numbers on desktop - on tablet and smaller it will be bottom
            flex-direction: row-reverse;
            @include mixins.tablet {
                flex-direction: column;
            }
        }
    }

    > .content {
        display: flex;
        height: 100%;
        gap: 3rem;
        align-items: flex-start;
        
        padding: 3rem;
        @include mixins.tablet {
            padding: 3rem 2rem;
        }

        flex-direction: row;
        @include mixins.tablet {
            flex-direction: column;
        }

        perspective: 1500px;

        .left {
            flex: 1 1 0px;
            display: flex;
            height: 100%;
            gap: 1rem;
            flex-direction: column;

            h2 {
                color: variables.$text-title;
                font-size: 2rem;
            }

            .chips {
                display: flex;
                gap: 1rem;
            }

            .actions {
                display: flex;
                margin-top: auto;
            }
        }

        .right {
            position: relative;
            flex: 1 1 0px;
            border: 1px solid variables.$stroke;
            border-radius: variables.$border-radius;
            height: calc(100% + 6rem);

            @include mixins.tablet {
                width: 100%;
                min-height: 20rem;
            }

            transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
            box-shadow: variables.$smooth-box-shadow;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                border-radius: variables.$border-radius;
            }

            &::before {
                content: '';
                position: absolute;
                inset: 0;
                opacity: 1;

                border-radius: variables.$border-radius;
                background: variables.$container-background-one;

                transition: opacity 1s cubic-bezier(0.075, 0.82, 0.165, 1);
            }

            &::after {
                content: '';
                position: absolute;
                inset: 0;

                border-radius: variables.$border-radius;
                background: variables.$glass-gradient;
            }
        }
    }

    &:hover {
        > .content .right::before {
            opacity: 0;
        }
    }
}
